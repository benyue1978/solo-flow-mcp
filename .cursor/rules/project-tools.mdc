---
alwaysApply: false
---
# Project Tools MCP Integration

This file defines how to use the MCP server tools for project document management.

## ⚠️ Important: Absolute Paths Required

All file reading tools now require **absolute paths** for security reasons. This ensures:
- ✅ No path traversal attacks
- ✅ Clear and explicit file access
- ✅ Better error messages when files don't exist

## Available Tools

### 1. Requirements Document
```json
{
  "tool": "get_requirements_md",
  "args": {
    "path": "/Users/username/project/docs/requirements.md"
  }
}
```

### 2. Tasks Document
```json
{
  "tool": "get_tasks_md",
  "args": {
    "path": "/Users/username/project/docs/tasks.md"
  }
}
```

### 3. Project Information
```json
{
  "tool": "get_project_info"
}
```

### 4. README Reader
```json
{
  "tool": "read_readme",
  "args": {
    "path": "/Users/username/project/README.md"
  }
}
```

## Usage Examples

### Read Requirements with Absolute Path
```json
{
  "tool": "get_requirements_md",
  "args": {
    "path": "/Users/username/project/docs/requirements.md"
  }
}
```

### Read Tasks with Absolute Path
```json
{
  "tool": "get_tasks_md",
  "args": {
    "path": "/Users/username/project/docs/tasks.md"
  }
}
```

### Get Current Project Info
```json
{
  "tool": "get_project_info"
}
```

## Common File Paths

Replace `/Users/username/project/` with your actual project path:

- `/Users/username/project/README.md` - Project readme
- `/Users/username/project/docs/requirements.md` - Requirements document
- `/Users/username/project/docs/tasks.md` - Tasks and todo list
- `/Users/username/project/docs/architecture.md` - System architecture
- `/Users/username/project/docs/api.md` - API documentation
- `/Users/username/project/CHANGELOG.md` - Change log
- `/Users/username/project/LICENSE` - License file

## Error Handling

### Invalid Path Error
If you use a relative path, you'll get:
```
❌ Security Error: Invalid file path 'README.md'

Requirements:
- Path must be absolute (e.g., '/Users/username/project/README.md')
- Relative paths are not allowed for security reasons
```

### File Not Found Error
If the file doesn't exist, you'll get:
```
❌ File not found: '/Users/username/project/docs/requirements.md'

Possible issues:
- File does not exist
- You may have used a relative path instead of absolute path
- Check if the path is correct

Current working directory: /Users/username/project
Example absolute path: /Users/username/project/README.md
```

## Benefits of Absolute Paths

1. **Security**: Prevents directory traversal attacks
2. **Clarity**: Explicit file access, no hidden assumptions
3. **Error Messages**: Clear feedback when paths are wrong
4. **Multi-Project**: Works across different projects without confusion
5. **Testing**: Easy to test with known absolute paths
# Project Tools MCP Integration

This file defines how to use the MCP server tools for project document management.

## ⚠️ Important: Absolute Paths Required

All file reading tools now require **absolute paths** for security reasons. This ensures:
- ✅ No path traversal attacks
- ✅ Clear and explicit file access
- ✅ Better error messages when files don't exist

## Available Tools

### 1. Requirements Document
```json
{
  "tool": "get_requirements_md",
  "args": {
    "path": "/Users/username/project/docs/requirements.md"
  }
}
```

### 2. Tasks Document
```json
{
  "tool": "get_tasks_md",
  "args": {
    "path": "/Users/username/project/docs/tasks.md"
  }
}
```

### 3. Project Information
```json
{
  "tool": "get_project_info"
}
```

### 4. README Reader
```json
{
  "tool": "read_readme",
  "args": {
    "path": "/Users/username/project/README.md"
  }
}
```

## Usage Examples

### Read Requirements with Absolute Path
```json
{
  "tool": "get_requirements_md",
  "args": {
    "path": "/Users/username/project/docs/requirements.md"
  }
}
```

### Read Tasks with Absolute Path
```json
{
  "tool": "get_tasks_md",
  "args": {
    "path": "/Users/username/project/docs/tasks.md"
  }
}
```

### Get Current Project Info
```json
{
  "tool": "get_project_info"
}
```

## Common File Paths

Replace `/Users/username/project/` with your actual project path:

- `/Users/username/project/README.md` - Project readme
- `/Users/username/project/docs/requirements.md` - Requirements document
- `/Users/username/project/docs/tasks.md` - Tasks and todo list
- `/Users/username/project/docs/architecture.md` - System architecture
- `/Users/username/project/docs/api.md` - API documentation
- `/Users/username/project/CHANGELOG.md` - Change log
- `/Users/username/project/LICENSE` - License file

## Error Handling

### Invalid Path Error
If you use a relative path, you'll get:
```
❌ Security Error: Invalid file path 'README.md'

Requirements:
- Path must be absolute (e.g., '/Users/username/project/README.md')
- Relative paths are not allowed for security reasons
```

### File Not Found Error
If the file doesn't exist, you'll get:
```
❌ File not found: '/Users/username/project/docs/requirements.md'

Possible issues:
- File does not exist
- You may have used a relative path instead of absolute path
- Check if the path is correct

Current working directory: /Users/username/project
Example absolute path: /Users/username/project/README.md
```

## Benefits of Absolute Paths

1. **Security**: Prevents directory traversal attacks
2. **Clarity**: Explicit file access, no hidden assumptions
3. **Error Messages**: Clear feedback when paths are wrong
4. **Multi-Project**: Works across different projects without confusion
5. **Testing**: Easy to test with known absolute paths
